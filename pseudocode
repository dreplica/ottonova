Steps to take when a user starts the game
- Get the api games
- cache them on localstorage

- so user can't see the cached data, change it to JSON string then to base64
    : create helper function that uses atob and btoa

- on refreshing or starting the browser
- if the user has a game the were playing show popup
    :(message: do you want to continue with the former game or new game)
    :popup is shown only if they have an existing game in local storage
    : if user selects continue: 
        : it means the game is stored in cache
        : continuous game is cached as well to know where to start from
    : if user selects new game:
        : fetch api and save on local storage
- if the user is done seeing their score, clean local storage saving only score
    : on entering page, if user has finished a game, check score details on cache
      take user to score page
  else : take to welcome screen
  
- when users goes to the next question, fetch that question from cache/reducer and show to user


Architecture:
- State: using useReducer and context
    : context for API monitoring 
    : Reducer for data handling

- folder/files:
    : folder - components contains all subcomponents
    : folder - pages includes:
        - welcome screen
        - game session
        - score board
    : file - route